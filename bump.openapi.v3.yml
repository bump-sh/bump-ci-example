openapi: "3.0"
info:
  title: Bump Api
  description: >
    This is the official Bump API documentation. Obviously created with Bump.
    Note that this is an experimental API on which everything could change.
  version: "1.0"
servers:
  - url: https://bump.sh/api/v1
x-topics:
  - title: Authentication
    content: |
      # Api token authentication

      Use the token from your documentation settings as the username of the basic auth, with no password.

      Example: `curl https://bump.sh/api/v1/docs/1/versions -u DOC_TOKEN:`

      Note that adding a colon after your token prevents cURL from asking for a password.
paths:
  /docs/{:id}/versions:
    post:
      summary: Create a new version
      description: >
        Create a new version for a given documentation, which will become the current version.
      parameters:
        - $ref: "#/components/parameters/DocumentationId"
      requestBody:
        $ref: "#/components/requestBodies/Version"
      responses:
        "200":
          description: "Success"
        "422":
          $ref: "#/components/responses/InvalidDefinition"
  /docs/{:id}/validations:
    post:
      summary: Validate a documentation definition
      description: >
        Validate a definition against the OpenApi v2.0 schema and return errors without
        creating a new version. This is useful in a CI process, to validate that a changed
        definition file is valid and won't fail when being updated on Bump.
      parameters:
        - $ref: "#/components/parameters/DocumentationId"
      requestBody:
        $ref: "#/components/requestBodies/Version"
      responses:
        "200":
          description: "Success"
        "422":
          $ref: "#/components/responses/InvalidDefinition"
  /previews:
    post:
      summary: Create a preview
      description: >
        Create a preview for a given documentation file. The preview will have a unique
        temporary URL, and will be active for 30 minutes.
      requestBody:
        $ref: "#/components/requestBodies/Version"
      responses:
        "200":
          description: "Success"
          content:
            "application/json":
              schema:
                $ref: "models/preview.yml"
        "422":
          $ref: "#/components/responses/InvalidDefinition"
components:
  parameters:
    DocumentationId:
      name: id
      in: path
      description: Documentation's id
      required: true
      schema:
        type: string
  requestBodies:
    Version:
      description: The version object
      content:
        "application/json":
          schema:
            $ref: "models/version.yml"
  responses:
    "InvalidDefinition":
      description: Definition is not valid.
      content:
        "application/json":
          schema:
            $ref: "models/error.yml"
